name: Build Image and Deploy Infrastructure

on:
  push:
    branches: 
      - main
      
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest    

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Log in to Docker Hub
      uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Docker Build
      run: |
        sudo docker system prune -a -f
        cd api/
        sudo rm migrations/versions/*.py

        docker build -t ${{ secrets.DOCKER_USERNAME }}/delivery-tracking-system .
    
    - name: Docker Push
      run: |
        docker push ${{ secrets.DOCKER_USERNAME }}/delivery-tracking-system
      
  #  This part require buying domain, paying for digital ocean (This needs money)
  # deploy:
  #   needs: build
  #   runs-on: ubuntu-latest

  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: Set up Python 3.10
  #       uses: actions/setup-python@v3
  #       with:
  #         python-version: "3.10"

  #     - name: Install doctl
  #       uses: digitalocean/action-doctl@v2
  #       with:
  #         token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
      
  #     - name: Save DigitalOcean kubeconfig with short-lived credentials
  #       run: doctl kubernetes cluster kubeconfig save --expiry-seconds 600 <cluster-name>
      
  #     - name: Deploy to DigitalOcean Kubernetes
  #       run: |
  #         cd infra
  #         kubectl apply -f k8s/
      
  #     - name: Verify deployment
  #       run: kubectl rollout status deployment/<deployment_name>